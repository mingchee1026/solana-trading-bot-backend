import { Keypair, TransactionInstruction } from '@solana/web3.js';

export type TxFailResult = {
  txInfo: {
    ixs: TransactionInstruction[];
    signer?: Keypair[];
  };
  reason: TxFailReason;
  txSignature?: string;
  msg?: string;
  passInfo?: any; //PERF any type for now
};

export enum TxFailReason {
  WALLET_NOT_FOUND = 'WALLET_NOT_FOUND',
  NETWORK_ISSUE = 'NETWORK_ISSUE',
  EXPIRED = 'TRANSACTION_EXPIRED',
  INSUFFICIENT_FUND = 'INSUFFICIENT_FUND',
  TX_FAILED = 'TX_FAILED',
  TX_SIGNER_NOT_FOUND = 'TX_SIGNER_NOT_FOUND',
  FAILED_TO_SIGN_TX = 'FAILED_TO_SIGN_TX',
  SIGNER_NOT_FOUND = 'SIGNER_NOT_FOUND',
  UNKNOWN = 'UNKNOWN ISSUE',
  SIGNATURE_VERIFICATION_FAILD = 'SIGNATURE_VERIFICATION_FAILD',
}

export enum Web3BundleError {
  //BUNDLER
  BUNDLER_MARKET_CREATION_FAILED = 'BUNDLER_MARKET_CREATION_FAILED',
  BUNDLER_POOL_TX_SETUP_FAILED = 'BUNDLER_POOL_TX_SETUP_FAILED',
  BUNDLER_BUY_TX_SETUP_FAILED = 'BUNDLER_BUY_TX_SETUP_FAILED',
  BUNDLER_AIRDROP_TXS_SETUP_FAILED = 'BUNDLER_AIRDROP_TXS_SETUP_FAILED',
  BUNDLER_FAILED_TO_PREPARE = 'BUNDLER_FAILED_TO_PREPARE',
  BUNDLER_HELPER_TX_FAILED = 'BUNDLER_HELPER_TX_FAILED',
  BUNDLER_HELPER_TX_EXPIRED = 'BUNDLER_HELPER_TX_EXPIRED',
  BUNDLER_FAILED_TO_SEND = 'BUNDLER_FAILED_TO_SEND',
  TRANSACTION_CANCELLED = 'TRANSACTION_CANCELLED',
  TOO_MANY_TXS = 'TOO_MANY_TXS',
}

export enum Web3Error {
  WALLET_NOT_FOUND = 'WALLET_NOT_FOUND',
  TRANSACTION_FAILED = 'TRANSACTION_FAILED',
  INVALID_PUBKEY_STR = 'INVALID_PUBKEY_STR',
  FAILED_TO_FETCH_DATA = 'FAILED_TO_FETCH_DATA',
  FAILED_TO_DEPLOY_METADATA = 'FAILED_TO_DEPLOY_METADATA',
  FAILED_TO_PREPARE_TX = 'FAILED_TO_PREPARE_TX',
  TX_SIGN_FAILED = 'TX_SIGN_FAILED',

  //TOKEN
  TOKEN_NOT_FOUND = 'TOKEN_NOT_FOUND',
  TOKEN_INFO_NOT_FOUND = 'TOKEN_INFO_NOT_FOUND',
  AUTHORITY_ALREADY_REVOKED = 'AUTHORITY_ALREADY_REVOKED',
  NOT_ENOUGH_TOKEN = 'NOT_ENOUGH_TOKEN',
  UNAUTHORISED = 'UNAUTHORISED',
}
